.Game {
  display: flex;
  justify-content: center;
  align-items: center;
}

.Game-area {
  --gap: 1%;
  aspect-ratio: 16 / 9;
  width: 100%;
  max-width: 100vw;
  max-height: 100vh;
  background-color: lightgray;
  box-sizing: border-box;
  display: grid;
  grid-template-columns:
    calc(10% - var(--gap))
    calc(70% - var(--gap))
    calc(20% - var(--gap));
  grid-template-rows:
    calc(14% - var(--gap))
    calc(15% - var(--gap))
    calc(18% - var(--gap))
    calc(18% - var(--gap))
    calc(15% - var(--gap))
    calc(20% - var(--gap));
  gap: 1%;
  overflow: hidden;
  position: relative;
}

.Card {
  aspect-ratio: 8 / 11;
  height: 100%;
  background-repeat: no-repeat;
  background-size: cover;
  background-position: center;
  position: relative;
}

:root {
  --selected-color: lightblue;
  --selectable-color: lightgreen;
}

.Card.Selectable {
  box-shadow: 0 0 10px 5px var(--selectable-color);
}

.Card.Selected {
  box-shadow: 0 0 10px 5px var(--selected-color);
}

@keyframes arrive-on-field {
  0% {
    opacity: 0;
    transform: scale(1.5);
  }
  100% {
    opacity: 1;
    transform: scale(1);
  }
}

.FieldCard {
  border-radius: 2000%;
  animation: arrive-on-field linear 0.5s;
}

.FieldCard .Power {
  font-weight: bold;
  font-size: x-large;
  border: 2px solid white;
  border-radius: 10%;
}

.Cost {
  position: absolute;
  top: 0;
  left: 0;
  background-color: white;
  color: black;
  display: flex;
  justify-content: center;
  align-items: center;
  padding: 1% 7%;
  font-weight: bold;
}

.Power {
  position: absolute;
  bottom: 0;
  right: 0;
  background-color: black;
  color: white;
  display: flex;
  justify-content: center;
  align-items: center;
  padding: 1% 7%;
  font-weight: bold;
}

.Subtitles {
  position: absolute;
  bottom: 20%;
  left: 0;
  right: 0;
  background-color: gray;
  font-size: x-small;
  text-align: center;
  padding-bottom: 2%;
}

.Subtitles > :last-child {
  font-size: xx-small;
}

@keyframes arrive-to-hand {
  0% {
    opacity: 0;
    transform: translate(400%, -100%) rotate(180deg);
  }
  100% {
    opacity: 1;
    transform: translate(0, 0) rotate(0deg);
  }
}

@keyframes arrive-to-opponent-hand {
  0% {
    opacity: 0;
    transform: translate(400%, 100%) rotate(-180deg);
  }
  100% {
    opacity: 1;
    transform: translate(0, 0) rotate(0deg);
  }
}

.Hand .Card {
  animation: arrive-to-hand linear 0.5s;
  z-index: 10;
  transition: transform 0.3s;
  transform: translateX(calc(var(--index) * 50%))
    translateY(calc(var(--abs-index) * var(--abs-index) * 2%))
    rotate(calc(var(--index) * -5deg)) scale(1.3);
}

.Hand .Card:hover {
  transform: translateX(calc(var(--index) * 50%)) translateY(-120%) scale(2.2);
}

.Hand.Opponent .Card {
  animation: arrive-to-opponent-hand linear 0.5s;
  transform: translateX(calc(var(--index) * 50%))
    translateY(calc(var(--abs-index) * calc(-1 * var(--abs-index) * 2%) - 20%))
    rotate(calc(var(--index) * 5deg)) scale(1);
  z-index: 10;
}

.Hand {
  display: flex;
  justify-content: center;
  gap: 1%;
}

.Upper-hand {
  grid-row: 1 / 2;
  grid-column: 2 / 3;
}

.Upper-resource {
  grid-row: 1 / 2;
  grid-column: 3 / 4;
}

.Upper-stacks {
  grid-row: 2 / 3;
  grid-column: 3 / 4;
  display: flex;
}

.Upper-protection {
  grid-row: 2 / 3;
  grid-column: 2 / 3;
  display: flex;
  justify-content: center;
  gap: 1%;
}

.Upper-field {
  display: flex;
  justify-content: center;
  grid-row: 3 / 4;
  grid-column: 2 / 3;
}

.Lower-field {
  display: flex;
  justify-content: center;
  grid-row: 4 / 5;
  grid-column: 2 / 3;
}

.Lower-protection {
  grid-row: 5 / 6;
  grid-column: 2 / 3;
  display: flex;
  justify-content: center;
  gap: 1%;
}

.Lower-hand {
  grid-row: 6 / 7;
  grid-column: 2 / 3;
}

.Lower-resource {
  grid-row: 6 / 7;
  grid-column: 3 / 4;
}

.Lower-stacks {
  grid-row: 5 / 6;
  grid-column: 3 / 4;
  display: flex;
}

.Control {
  grid-row: 3 / 5;
  grid-column: 1 / 2;
}

.Resource {
  display: flex;
}

.Stack {
  position: relative;
  flex: 1;
}

.Stack > * {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
}

.Inspect {
  position: absolute;
  top: 50%;
  right: 10%;
  height: 40%;
  transform: translateY(-50%);
}
